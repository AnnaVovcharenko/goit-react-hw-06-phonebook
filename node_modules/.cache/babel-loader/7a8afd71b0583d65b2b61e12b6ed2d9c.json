{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Documents\\\\GitHub\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\Form\\\\Form.jsx\";\nimport React from 'react';\n//import PropTypes from 'prop-types'; Проверка типов с помощью PropTypes\nimport { Formik } from 'formik';\nimport { Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { MyForm, MyField } from './Form.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formSchema = Yup.object().shape({\n  name: Yup.string().matches(/^[a-zA-Z\\s]+$/, 'Only letters are allowed').min(3, 'Too Short!').required('This field is required, please fill that'),\n  number: Yup.string().matches(/^\\d{3}-\\d{2}-\\d{2}$/, 'Must be in format: 000-00-00').required('This field is required, please fill that')\n});\nconst FormContact = ({\n  onAdd\n}) => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      name: '',\n      number: ''\n    },\n    validationSchema: formSchema,\n    onSubmit: (values, actions) => {\n      onAdd(values);\n      actions.resetForm();\n    },\n    children: /*#__PURE__*/_jsxDEV(MyForm, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(MyField, {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"name\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"number\",\n          children: \"Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(MyField, {\n          type: \"tel\",\n          name: \"number\",\n          placeholder: \"Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMsg, {\n          name: \"number\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add contacu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = FormContact;\nexport default FormContact;\nvar _c;\n$RefreshReg$(_c, \"FormContact\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Yup","MyForm","MyField","jsxDEV","_jsxDEV","formSchema","object","shape","name","string","matches","min","required","number","FormContact","onAdd","initialValues","validationSchema","onSubmit","values","actions","resetForm","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","component","ErrorMsg","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Documents/GitHub/goit-react-hw-02-phonebook/src/components/Form/Form.jsx"],"sourcesContent":["import React from 'react';\r\n//import PropTypes from 'prop-types'; Проверка типов с помощью PropTypes\r\nimport { Formik } from 'formik';\r\nimport { Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {MyForm, MyField } from './Form.styled';\r\n\r\n\r\n\r\n\r\nconst formSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n      .matches(/^[a-zA-Z\\s]+$/, 'Only letters are allowed')\r\n      .min(3, 'Too Short!')\r\n      .required('This field is required, please fill that'),\r\n    number: Yup.string()\r\n      .matches(/^\\d{3}-\\d{2}-\\d{2}$/, 'Must be in format: 000-00-00')\r\n      .required('This field is required, please fill that'),\r\n  });\r\n\r\n\r\n\r\nconst FormContact = ({ onAdd }) => {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        name: '',\r\n        number: '',\r\n        }}\r\n        validationSchema={formSchema}\r\n      onSubmit={(values, actions) => {\r\n        onAdd(values);\r\n        actions.resetForm();\r\n      }}\r\n    >\r\n      <MyForm>\r\n\r\n        <div>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <MyField type='text'  name=\"name\" placeholder=\"Name\" />\r\n        <ErrorMessage name=\"name\" component=\"div\" />\r\n\r\n        <label htmlFor=\"number\">Number</label>\r\n        <MyField  type='tel' name=\"number\" placeholder=\"Number\" />\r\n        <ErrorMsg name=\"number\" component=\"div\" />\r\n\r\n        </div>\r\n        \r\n\r\n\r\n        <button type=\"submit\">Add contacu</button>\r\n      </MyForm>\r\n    </Formik>\r\n  );\r\n};\r\nexport default FormContact;"],"mappings":"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"},"metadata":{},"sourceType":"module"}